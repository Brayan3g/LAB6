 ; UNIVERSIDAD DEL VALLE DE GUATEMALA
; DEPARTAMENTO DE INGENIERIA ELECTRONICA, MECATRONICA Y BIOMEDICA
; MICROCONTROLADORES 
; DOCUMENTO: LAB6
; DISPOSITIVO: PIC16F887
; AUTOR: BRAYAN GABRIEL GIRON GARCIA
; PROGRAMA: CONTADOR DECIMAL CON TMR1 Y LED PARPADIANTE CON TMR2.
; CREADO: 23 MARZO, 2021
;-------------------------------------------------------------------------------
PROCESSOR 16F887
#include <xc.inc>

;-------------------------- CONFIGURACION WORD1 --------------------------------
 CONFIG FOSC=INTRC_NOCLKOUT //Oscilador interno sin salidas
 CONFIG WDTE=OFF	    //WDT disabled (reinicio repetitivo del pic)
 CONFIG PWRTE=ON	    //PWRT enabled (espera de 72ms al iniciar
 CONFIG MCLRE=OFF	    //pin MCLR se utiliza como I/O
 CONFIG CP=OFF		    //sin protección de código
 CONFIG CPD=OFF		    //sin protección de datos
 
 CONFIG BOREN=OFF	    //sin reinicio cuando el voltaje baja de 4v
 CONFIG IESO=OFF	    //Reinicio sin cambio de reloj de interno a externo
 CONFIG FCMEN=OFF	    //Cambio de reloj externo a interno en caso de falla
 CONFIG LVP=ON		    //Programación en bajo voltaje permitida
 
;-------------------------- CONFIGURACION WORD2 --------------------------------
 CONFIG WRT=OFF	            //Protección de autoescritura 
 CONFIG BOR4V=BOR40V        //Reinicio abajo de 4V 
 
;----------------------------------- MACROS ------------------------------------ 
 REIN_TMR0 MACRO    ; CREAR MACRO REIN_TMR0.
    BANKSEL TMR0    ; SELECIONAMOS EL BANCO DEL TMR0.
    MOVLW   253     ; ASIGNAMOS EL VALOR DE 217 AL TMR0, 
    MOVWF   TMR0    ; EL CUAL OBTUBIMOS CON LA FORMULA PARA UN TIEMPO DE 10MS.    
    BCF	    T0IF    ; LIMPIAMOS LA BANDERA DEL TMR0.
    ENDM  
    
 REIN_TMR1 MACRO
    MOVLW   0x85    ; ASIGNAMOS EL VALOR DE 0x85 AL TMR1H, 
    MOVWF   TMR1H   ; EL CUAL ES LA PARTE SUPERIOR DEL NUMERO DE CONTES SELECCIONADO.    
    MOVLW   0xEE    ; ASIGNAMOS EL VALOR DE 0xEE AL TMR1L, 
    MOVWF   TMR1L   ; EL CUAL ES LA PARTE INFERIOR DEL NUMERO DE CONTES SELECCIONADO.    
    BCF	    TMR1IF  ; LIMPIAMOS LA BANDERA DEL TMR1.
    ENDM

;---------------------------- VARIABLES DEL PROGRAMA ---------------------------
 PSECT udata_bank0  ; CREAMOS LAS VARIABLES A UTILIZAR EN EL PROGRAMA. 
 VAR:         DS 2  ; VARIABLE PARA GUARDAR EL VALOR DEL CONTADOR   
 BANDERAS:    DS 1  ; VARIABLE PARA SELECION DE DISPLAYS.
 V1:          DS 2  ; VARIABLE CON EL VALOR DEL NUMERO A SEPARAR EN CEN, DEC Y UNI.
 UNID:        DS 1  ; VARIABLE CON EL NUMERO DE UNIDADES DEL VALOR DE V1.
 DECE:        DS 1  ; VARIABLE CON EL NUMERO DE DECENAS DEL VALOR DE V1.
 CENT:        DS 1  ; VARIABLE CON EL NUMERO DE CENTENAS DEL VALOR DE V1.
 UNID1:       DS 1  ; VARIABLE CON EL NUMERO DE LA UNIDAD A MOSTRAR EN DISPLAYS.  
 DECE1:       DS 1  ; VARIABLE CON EL NUMERO DE LA DECENA A MOSTRAR EN DISPLAYS.
 CENT1:       DS 1  ; VARIABLE CON EL NUMERO DE LA CENTENA A MOSTRAR EN DISPLAYS.
    
;-------------------------- VARIABLES DE INTERRUPCION -------------------------
 PSECT udata_shr    ; COMMON MEMORY
 W_TEMP:      DS 1  ; VARIABLE PARA GUARDAR EL VALOR TEMPORAL DE "W".
 STATUS_TEMP: DS 1  ; VARIABLE PARA GUARDAR EL VALOR TEMPORAL DEL "STATUS".

;------------------------------- VECTOR RESET -----------------------------------\    
;VECTOR DE RESTE:
 PSECT resVect, class=CODE, abs, delta=2
 ORG 00h
 RESET_VEC:
    PAGESEL MAIN
    GOTO    MAIN

;-------------------------- VECTOR DE INTERRUPCIONES ---------------------------
 PSECT intVect, class=CODE, abs, delta=2
 ORG 04h
 
 PUSH:                 
    MOVWF W_TEMP        ; GUARDAMOS EL VALOR DE "W" EN UNA VARIABLE TEMPORAL.
    SWAPF STATUS,W      ; GUARDAMOS EL VALOR DEL "STATUS" EN UNA VARIABLE TEMPORAL.
    MOVWF STATUS_TEMP 
    
 ISR:                         
    BTFSC T0IF          ; VERIFICAMOS LA BANDERA DEL TMR0.     
    CALL  INTERR_TMR0   ; LLAMAMOS A LA SUBRUTINA DE INTERR_TMR0.
    BTFSC TMR1IF        ; VERIFICAMOS LA BANDERA DEL TMR1.     
    CALL  INTERR_TMR1   ; LLAMAMOS A LA SUBRUTINA DE INTERR_TMR1.
    BTFSC TMR2IF        ; VERIFICAMOS LA BANDERA DEL TMR2.     
    CALL  INTERR_TMR2   ; LLAMAMOS A LA SUBRUTINA DE INTERR_TMR2.
    
    
 POP:                   
    SWAPF STATUS_TEMP,W ; ASIGNAMOS EL VALOR TEMPORAR DEL STATUS A W. 
    MOVF  STATUS        ; LE REGRESAMOS AL STATUS SU VALOR ANTES DE LA INTERRUP.  
    SWAPF W_TEMP,F      ; LE REGRESAMOS A W SU VALOR ANTES DEL LA INTERRUPCION.
    SWAPF W_TEMP,W
    RETFIE
    
;------------------------- SUBRUTINAS DE INTERRUPCION --------------------------
 INTERR_TMR0:              
    REIN_TMR0	          ; REINICIAMOS EL TMR0
    BCF     CARRY       ; LIMPIAMOS EL CARRY
    CLRF    PORTD       ; LIMPIAMOS EL PORTD
    BTFSS   PORTB,0     ; VERIFICAMOS SI EL LED PARPADEANTE ESTA APAGADO.
    GOTO    DISP_OFF    ; SI ESTA APAGADO, VAMOS A LA SUBRRUINA DISP_OFF.
    BTFSC   BANDERAS,1  ; VERIFICAMOS SI DEBEMOS ENCENDER EL DISPLAY_4.
    GOTO    DISP_DECE   ; VAMOS A LA SUBRUTINA DISPLAY_DECENAS.
    BTFSC   BANDERAS,2  ; VERIFICAMOS SI DEBEMOS ENCENDER EL DISPLAY_5.
    GOTO    DISP_UNID   ; VAMOS A LA SUBRUTINA DISPLAY_UNIDADES.
    MOVLW   00000001B   ; MOVEMOS EL VALOR DE 1 A "W".
    MOVWF   BANDERAS    ; SETEAMOS BANDERAS CON UN "1" EN LA POSICION 0.
  
 SELEC_DISP:            ; SUBRUTINA DE SELECCION DE VISUALIZACION DE DISPLAYS.
    RLF     BANDERAS,1  ; CORREMOS EL "1" UNA POSICION A LA IZQUIERDA PARA
    RETURN              ; CAMBIAR DE DISPLAY.
   
 DISP_OFF:
    BCF     PORTD,0     ; APAGAMOS EL DIGITO DE UNIDADES DEL DISPLAY.
    BCF     PORTD,1     ; APAGAMOS EL DIGITO DE DECENAS DEL DISPLAY.
    RETURN
    
 DISP_DECE:
    MOVF    DECE1,W     ; MOVEMOS EL VALORS DE DECE1 A "W".
    MOVWF   PORTC       ; MOVEMOS EL VALOR DE DECE1 AL DISPLAY DEL PORTD.
    BSF     PORTD,1     ; ACTIVAMOS EL DIGITO DECENAS DEL DISPLAY DEL PORTD.
    GOTO    SELEC_DISP  ; VAMOS A LA SUBRUTINA SELEC_DISP.   

 DISP_UNID:
    MOVF    UNID1,W     ; MOVEMOS EL VALORS DE UNID1 A "W".
    MOVWF   PORTC       ; MOVEMOS EL VALOR DE UNID1 AL DISPLAY DEL PORTD.
    BSF     PORTD,0     ; ACTIVAMOS EL DIGITO UNIDADES DEL DISPLAY DEL PORTD.
    GOTO    SELEC_DISP  ; VAMOS A LA SUBRUTINA SELEC_DISP.
;______________________________________________________________________________;      
 
 INTERR_TMR1:              
    REIN_TMR1
    INCF    VAR
    return
;______________________________________________________________________________;    
 
INTERR_TMR2:              
    BCF    TMR2IF
    INCF   PORTB
    return
  
;------------------------------- CODIGO PRINCIPAL ------------------------------
 PSECT CODE, delta=2, abs
 ORG 100h	         

 TABLA:                 ; TABLA CON VALORES DEL DISPLAY.
    CLRF  PCLATH
    BSF   PCLATH,0
    ANDLW 0x0F
    ADDWF PCL
    RETLW 00111111B     ; 0
    RETLW 00000110B     ; 1
    RETLW 01011011B     ; 2
    RETLW 01001111B     ; 3
    RETLW 01100110B     ; 4
    RETLW 01101101B     ; 5
    RETLW 01111101B     ; 6
    RETLW 00000111B     ; 7
    RETLW 01111111B     ; 8
    RETLW 01101111B     ; 9
    RETURN
    RETURN
    RETURN
    RETURN
    RETURN
    RETURN
    ;RETLW 01110111B     ; A
   ; RETLW 01111100B     ; b
   ; RETLW 00111001B     ; C
   ; RETLW 01011110B     ; d
   ; RETLW 01111001B     ; E
   ; RETLW 01110001B     ; F  
 
;------------------------------------ MAIN -------------------------------------
 MAIN:
    CALL CONFIG_IO       ; LLAMAMOSA LA CONFIGURACION DE ENTRADAS Y SALIDAS.
    CALL CONFIG_RELOJ    ; LLAMAMOS LA CONFIGURACION DEL RELOJ INTERNO.
    CALL CONFIG_TMR0     ; CONFIGURAMOS EL TMR0.
    CALL CONFIG_TMR1     ; CONFIGURAMOS EL TMR1. 
    CALL CONFIG_TMR2     ; CONFIGURAMOS EL TMR2. 
    CALL CONFIG_INTERR   ; HABILITAMOS INTERRUPCIONES
    BANKSEL PORTA        ; SELECCIONAMOS EL BANCO 00.
    
;------------------------------------ LOOP -------------------------------------
 LOOP:
    MOVF  VAR,W          ; MOVEMOS EL VALOR DEL CONTADOR A "W".
    MOVWF V1             ; MOVEMOS EL VALOR DE "W" A "V1".
    CALL  CENTENAS       ; SEPARAMOS EL VALOR DE "V1" EN CENTENAS, DECENAS Y UNIDADES.
    CALL  DISPLAY_UDC    ; LE ASIGNAMOS A LAS CENT,DEC,UNID SU VALOR CORRESPONDIENTE EN EL DISPLAY DECIMAL.
    GOTO  LOOP           
 
;--------------------------- SUBRUTINAS PRINCIPALES ----------------------------  

 CENTENAS:
   CLRF   CENT        ; LIMPIAMOS LA VARIABLE CENT.
   MOVLW  01100100B   ; ASIGNAMOS EL VALOR DE "100" A "W".
   SUBWF  V1,1        ; RESTMOS "100" AL VALOR DE V1.
   BTFSS  STATUS,0    ; VERIFICAMOS SI EL RESULTADO DE LA RESTA ES NEGATIVO. 
   GOTO   DECENAS     ; SI LA RESTA ES NEGATIVA, PASAMOS A LA SUBRUTINA DECENAS.
   INCF   CENT        ; SI LA RESTA AUN ES POSITVA O CERO, INCREMENTA "CENT".
   GOTO   $-5         ; REGRESAMOS 5 LINEAS PARA RESTAR NUEVAMENTE.
          
 DECENAS: 
    CLRF  DECE        ; LIMPIAMOS LA VARIABLE "DECE".
    MOVLW 01100100B   ; ASIGNAMOS EL VALOR DE "100" A "W".
    ADDWF V1,1        ; LE SUMAMOS 100 A V1, PARA QUE NOS QUEDE EL RESIDUO DE LA RESTA ANTERIOR.
    MOVLW 00001010B   ; ASIGNAMOS EL VALOR DE "10" A "W".
    SUBWF V1,1        ; RESTMOS "10" AL VALOR DE V1. 
    BTFSS STATUS,0    ; VERIFICAMOS SI EL RESULTADO DE LA RESTA ES NEGATIVO.
    GOTO  UNIDADES    ; SI LA RESTA ES NEGATIVA, PASAMOS A LA SUBRUTINA UNIDADES.
    INCF  DECE        ; SI LA RESTA AUN ES POSITVA O CERO, INCREMENTA "DECE".
    GOTO  $-5         ; REGRESAMOS 5 LINEAS PARA RESTAR NUEVAMENTE.
    
 UNIDADES:
    CLRF  UNID        ; LIMPIAMOS LA VARIABLE "UNID".
    MOVLW 00001010B   ; ASIGNAMOS EL VALOR DE "10" A "W". 
    ADDWF V1,1        ; LE SUMAMOS 10 A V1, PARA QUE NOS QUEDE EL RESIDUO DE LA RESTA ANTERIOR.
    MOVLW 00000001B   ; ASIGNAMOS EL VALOR DE "1" A "W".
    SUBWF V1,1        ; RESTMOS "1" AL VALOR DE V1. 
    BTFSS STATUS,0    ; VERIFICAMOS SI EL RESULTADO DE LA RESTA ES NEGATIVO.
    RETURN            ; SI LA RESTA ES NEGATIVA, REGRESAMOS AL LOOP.
    INCF  UNID        ; SI LA RESTA AUN ES POSITVA O CERO, INCREMENTA "UNID".
    GOTO  $-5         ; REGRESAMOS 5 LINEAS PARA RESTAR NUEVAMENTE.

DISPLAY_UDC:          
    MOVF  DECE,W      ; MOVEMOS EL VALOR DE "DECE" A "W". 
    CALL  TABLA       ; ASIGNAMOS A "W" EL VALOR CORRESPONDIENTE PARA EL DISPLAY. 
    movwf DECE1       ; MOVEMOS EL VALOR DE "W" A "DECE1".
    MOVF  UNID,W      ; MOVEMOS EL VALOR DE "UNID" A "W". 
    CALL  TABLA       ; ASIGNAMOS A "W" EL VALOR CORRESPONDIENTE PARA EL DISPLAY. 
    MOVWF UNID1       ; MOVEMOS EL VALOR DE "W" A "UNID1".
    RETURN  
    
;----------------------- SUBRUTINAS DE COMFIGURACION --------------------------;
 CONFIG_IO:
    BANKSEL ANSEL       ; SELECCIONAMOS EL BANCO 03.
    CLRF    ANSEL       ; DEJAMOS TODOS LOS PINES COMO DIGITALES 
    CLRF    ANSELH
    BANKSEL TRISA       ; SELECCIONAMOS EL BANCO 01.
    BCF     TRISB,0     ; ASIGNAMOS EL PIN "0" DEL PORTB COMO SALIDA.
    CLRF    TRISC       ; ASIGNAMOS TODO EL PORTC COMO SALIDAS.
    CLRF    TRISD       ; ASIGNAMOS TODO EL PORTD COMO SALIDAS.
   ; BCF     TRISD,0
    ;BCF     TRISD,1
    BANKSEL PORTA       ; SELECCIONAMOS EL BANCO 00.
    CLRF    PORTB       ; LIMPIAMOS EL PORTB.
    CLRF    PORTC       ; LIMPIAMOS EL PORTC.
    CLRF    PORTD       ; LIMPIAMOS EL PORTD.
    RETURN 

 CONFIG_INTERR:   
    BANKSEL PIE1
    BSF T0IE            ; HABILITAMOS LA INTERRUPCION DEL TMR0.
    BSF TMR1IE
    BSF TMR2IE
    BANKSEL T1CON
    BSF GIE             ; HABILIATAMOS LAS INTERRUPCIONES GLOBALES.
    BSF	PEIE            ; HABILITAMOS LA INTERRUPCION DEL PORTB.
    BCF T0IF            ; LIMPIAMOS LA BANDERA DEL TMR0.
    BCF TMR1IF
    BCF TMR2IF
    RETURN  
    
 CONFIG_RELOJ:
    BANKSEL OSCCON	; SELECIONAMOS EL BANCO DEL OSCCON. 
    BSF	    IRCF2	; OSCCON configuración bit2 IRCF.
    BCF	    IRCF1	; OSCCON configuracuón bit1 IRCF.
    BCF	    IRCF0	; OSCCON configuración bit0 IRCF.
    BSF	    SCS		; SELECIONAMOS UN RELOJ INTERNO CON FRECUENCIA DE 1MHZ.
    RETURN                  
                              
 CONFIG_TMR0:         
    BANKSEL OPTION_REG  ; SELECCIONAMOS EL BANCO DEL OPTION_REG.
    BCF	    T0CS        ; SELECIONAMOS EL RELOJ INTERNO.
    BCF	    PSA	        ; PRESCALER.
    BSF	    PS2
    BSF	    PS1
    BSF	    PS0	        ; PS = 111, ASIGNAMOS EL VALOR DE 256 AL PRESCALER.
    REIN_TMR0           ; MACRO DE REINICIO DEL TMR0.
    RETURN 
    
 CONFIG_TMR1:         
    BANKSEL T1CON       ; SELECCIONAMOS EL BANCO DEL REGISTRO T1CON.
    BCF	    TMR1GE      ;
    BSF	    T1CKPS1     ; SELECCIONAMOS UN PRESCALER DE 1:8.
    BSF	    T1CKPS0
    BCF	    T1OSCEN     ; RELOJ INTERNO...
    BCF	    TMR1CS      ; 
    BSF     TMR1ON      ; ENCENDEMOS EL TMR1.
    REIN_TMR1           ; MACRO DE REINICIO DEL TMR1.
    RETURN  
            
 CONFIG_TMR2:
    BANKSEL T2CON
    MOVLW   11111111B
    MOVWF   T2CON
    BANKSEL PR2
    MOVLW   243
    MOVWF   PR2
    RETURN
      
 END
    
